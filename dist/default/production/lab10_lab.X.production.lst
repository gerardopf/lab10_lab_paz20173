

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sat May 07 00:42:53 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    16                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    17                           	dabs	1,0x7E,2
    18  0000                     
    19                           ; Version 2.40
    20                           ; Generated 17/11/2021 GMT
    21                           ; 
    22                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    23                           ; All rights reserved.
    24                           ; 
    25                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    26                           ; 
    27                           ; Redistribution and use in source and binary forms, with or without modification, are
    28                           ; permitted provided that the following conditions are met:
    29                           ; 
    30                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    31                           ;        conditions and the following disclaimer.
    32                           ; 
    33                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    34                           ;        of conditions and the following disclaimer in the documentation and/or other
    35                           ;        materials provided with the distribution. Publication is not required when
    36                           ;        this file is used in an embedded application.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210                           
   211                           	psect	idataCOMMON
   212  0738                     __pidataCOMMON:
   213                           
   214                           ;initializer for _cont
   215  0738  3419               	retlw	25
   216  0739  3400               	retlw	0
   217                           
   218                           	psect	idataBANK0
   219  075B                     __pidataBANK0:
   220                           
   221                           ;initializer for _mensaje
   222  075B  3448               	retlw	72
   223  075C  346F               	retlw	111
   224  075D  346C               	retlw	108
   225  075E  3461               	retlw	97
   226  075F  3420               	retlw	32
   227  0760  346D               	retlw	109
   228  0761  3475               	retlw	117
   229  0762  346E               	retlw	110
   230  0763  3464               	retlw	100
   231  0764  346F               	retlw	111
   232  0765  342C               	retlw	44
   233  0766  3420               	retlw	32
   234  0767  3474               	retlw	116
   235  0768  3465               	retlw	101
   236  0769  346E               	retlw	110
   237  076A  3467               	retlw	103
   238  076B  346F               	retlw	111
   239  076C  3420               	retlw	32
   240  076D  3468               	retlw	104
   241  076E  3461               	retlw	97
   242  076F  346D               	retlw	109
   243  0770  3462               	retlw	98
   244  0771  3472               	retlw	114
   245  0772  3465               	retlw	101
   246  0773  3400               	retlw	0
   247  0018                     _RCSTAbits	set	24
   248  000B                     _INTCONbits	set	11
   249  0008                     _PORTD	set	8
   250  0005                     _PORTA	set	5
   251  0019                     _TXREG	set	25
   252  000C                     _PIR1bits	set	12
   253  009A                     _SPBRGH	set	154
   254  0099                     _SPBRG	set	153
   255  0098                     _TXSTAbits	set	152
   256  008F                     _OSCCONbits	set	143
   257  008C                     _PIE1bits	set	140
   258  0088                     _TRISD	set	136
   259  0085                     _TRISA	set	133
   260  0187                     _BAUDCTLbits	set	391
   261  0189                     _ANSELH	set	393
   262  0188                     _ANSEL	set	392
   263                           
   264                           	psect	cinit
   265  07DE                     start_initialization:	
   266                           ; #config settings
   267                           
   268  07DE                     __initialization:
   269                           
   270                           ; Initialize objects allocated to BANK0
   271  07DE  1383               	bcf	3,7	;select IRP bank0
   272  07DF  3039               	movlw	low (__pdataBANK0+25)
   273  07E0  00FD               	movwf	btemp+-1
   274  07E1  3007               	movlw	high __pidataBANK0
   275  07E2  00FE               	movwf	btemp
   276  07E3  305B               	movlw	low __pidataBANK0
   277  07E4  00FF               	movwf	btemp+1
   278  07E5  3020               	movlw	low __pdataBANK0
   279  07E6  0084               	movwf	4
   280  07E7  120A  118A  274C  120A  118A  	fcall	init_ram0
   281                           
   282                           ; Initialize objects allocated to COMMON
   283  07EC  120A  118A  2738  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   284  07F1  00F4               	movwf	__pdataCOMMON& (0+127)
   285  07F2  120A  118A  2739  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   286  07F7  00F5               	movwf	(__pdataCOMMON+1)& (0+127)
   287                           
   288                           ; Clear objects allocated to COMMON
   289  07F8  01F0               	clrf	__pbssCOMMON& (0+127)
   290  07F9  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   291  07FA  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   292  07FB  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   293  07FC                     end_of_initialization:	
   294                           ;End of C runtime variable initialization code
   295                           
   296  07FC                     __end_of__initialization:
   297  07FC  0183               	clrf	3
   298  07FD  120A  118A  2F3A   	ljmp	_main	;jump to C main() function
   299                           
   300                           	psect	bssCOMMON
   301  0070                     __pbssCOMMON:
   302  0070                     _i:
   303  0070                     	ds	2
   304  0072                     _valor_old:
   305  0072                     	ds	1
   306  0073                     _indice:
   307  0073                     	ds	1
   308                           
   309                           	psect	dataCOMMON
   310  0074                     __pdataCOMMON:
   311  0074                     _cont:
   312  0074                     	ds	2
   313                           
   314                           	psect	dataBANK0
   315  0020                     __pdataBANK0:
   316  0020                     _mensaje:
   317  0020                     	ds	25
   318                           
   319                           	psect	inittext
   320  0748                     init_fetch0:	
   321                           ;	Called with low address in FSR and high address in W
   322                           
   323  0748  087E               	movf	btemp,w
   324  0749  008A               	movwf	10
   325  074A  087F               	movf	btemp+1,w
   326  074B  0082               	movwf	2
   327  074C                     init_ram0:	
   328                           ;Called with:
   329                           ;	high address of idata address in btemp 
   330                           ;	low address of idata address in btemp+1 
   331                           ;	low address of data in FSR
   332                           ;	high address + 1 of data in btemp-1
   333                           
   334  074C  120A  118A  2748  120A  118A  	fcall	init_fetch0
   335  0751  0080               	movwf	0
   336  0752  0A84               	incf	4,f
   337  0753  0804               	movf	4,w
   338  0754  067D               	xorwf	btemp+-1,w
   339  0755  1903               	btfsc	3,2
   340  0756  3400               	retlw	0
   341  0757  0AFF               	incf	btemp+1,f
   342  0758  1903               	btfsc	3,2
   343  0759  0AFE               	incf	btemp,f
   344  075A  2F4C               	goto	init_ram0
   345                           
   346                           	psect	cstackCOMMON
   347  0076                     __pcstackCOMMON:
   348  0076                     ?_setup:
   349  0076                     ??_setup:	
   350                           ; 1 bytes @ 0x0
   351                           
   352  0076                     ?_imprimir:	
   353                           ; 1 bytes @ 0x0
   354                           
   355  0076                     ??_imprimir:	
   356                           ; 1 bytes @ 0x0
   357                           
   358  0076                     ?_main:	
   359                           ; 1 bytes @ 0x0
   360                           
   361                           
   362                           ; 1 bytes @ 0x0
   363  0076                     	ds	2
   364  0078                     ??_main:
   365                           
   366                           	psect	maintext
   367  073A                     __pmaintext:	
   368                           ; 1 bytes @ 0x2
   369 ;;
   370 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   371 ;;
   372 ;; *************** function _main *****************
   373 ;; Defined at:
   374 ;;		line 49 in file "lab10_lab_pgr.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : B00/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0
   391 ;;      Totals:         0       0       0       0       0
   392 ;;Total ram usage:        0 bytes
   393 ;; Hardware stack levels required when called: 1
   394 ;; This function calls:
   395 ;;		_imprimir
   396 ;;		_setup
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402  073A                     _main:	
   403                           ;psect for function _main
   404                           
   405  073A                     l711:	
   406                           ;incstack = 0
   407                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   408                           
   409                           
   410                           ;lab10_lab_pgr.c: 50:     setup();
   411  073A  120A  118A  2774  120A  118A  	fcall	_setup
   412  073F                     l713:
   413                           
   414                           ;lab10_lab_pgr.c: 52:         imprimir();
   415  073F  120A  118A  27A1  120A  118A  	fcall	_imprimir
   416  0744  2F3F               	goto	l713
   417  0745  120A  118A  2800   	ljmp	start
   418  0748                     __end_of_main:
   419                           
   420                           	psect	text1
   421  0774                     __ptext1:	
   422 ;; *************** function _setup *****************
   423 ;; Defined at:
   424 ;;		line 73 in file "lab10_lab_pgr.c"
   425 ;; Parameters:    Size  Location     Type
   426 ;;		None
   427 ;; Auto vars:     Size  Location     Type
   428 ;;		None
   429 ;; Return value:  Size  Location     Type
   430 ;;                  1    wreg      void 
   431 ;; Registers used:
   432 ;;		wreg, status,2, status,0
   433 ;; Tracked objects:
   434 ;;		On entry : 0/0
   435 ;;		On exit  : 0/0
   436 ;;		Unchanged: 0/0
   437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   438 ;;      Params:         0       0       0       0       0
   439 ;;      Locals:         0       0       0       0       0
   440 ;;      Temps:          0       0       0       0       0
   441 ;;      Totals:         0       0       0       0       0
   442 ;;Total ram usage:        0 bytes
   443 ;; Hardware stack levels used: 1
   444 ;; This function calls:
   445 ;;		Nothing
   446 ;; This function is called by:
   447 ;;		_main
   448 ;; This function uses a non-reentrant model
   449 ;;
   450                           
   451  0774                     _setup:	
   452                           ;psect for function _setup
   453                           
   454  0774                     l661:	
   455                           ;incstack = 0
   456                           ; Regs used in _setup: [wreg+status,2+status,0]
   457                           
   458                           
   459                           ;lab10_lab_pgr.c: 74:     ANSEL = 0b00000001;
   460  0774  3001               	movlw	1
   461  0775  1683               	bsf	3,5	;RP0=1, select bank3
   462  0776  1703               	bsf	3,6	;RP1=1, select bank3
   463  0777  0088               	movwf	8	;volatile
   464  0778                     l663:
   465                           
   466                           ;lab10_lab_pgr.c: 75:     ANSELH = 0;
   467  0778  0189               	clrf	9	;volatile
   468  0779                     l665:
   469                           
   470                           ;lab10_lab_pgr.c: 77:     TRISA = 0b00000001;
   471  0779  3001               	movlw	1
   472  077A  1683               	bsf	3,5	;RP0=1, select bank1
   473  077B  1303               	bcf	3,6	;RP1=0, select bank1
   474  077C  0085               	movwf	5	;volatile
   475                           
   476                           ;lab10_lab_pgr.c: 78:     TRISD = 0;
   477  077D  0188               	clrf	8	;volatile
   478                           
   479                           ;lab10_lab_pgr.c: 80:     PORTA = 0;
   480  077E  1283               	bcf	3,5	;RP0=0, select bank0
   481  077F  1303               	bcf	3,6	;RP1=0, select bank0
   482  0780  0185               	clrf	5	;volatile
   483                           
   484                           ;lab10_lab_pgr.c: 81:     PORTD = 0;
   485  0781  0188               	clrf	8	;volatile
   486  0782                     l667:
   487                           
   488                           ;lab10_lab_pgr.c: 84:     INTCONbits.GIE = 1;
   489  0782  178B               	bsf	11,7	;volatile
   490  0783                     l669:
   491                           
   492                           ;lab10_lab_pgr.c: 85:     INTCONbits.PEIE = 1;
   493  0783  170B               	bsf	11,6	;volatile
   494  0784                     l671:
   495                           
   496                           ;lab10_lab_pgr.c: 86:     PIE1bits.RCIE = 1;
   497  0784  1683               	bsf	3,5	;RP0=1, select bank1
   498  0785  1303               	bcf	3,6	;RP1=0, select bank1
   499  0786  168C               	bsf	12,5	;volatile
   500  0787                     l673:
   501                           
   502                           ;lab10_lab_pgr.c: 89:     OSCCONbits.IRCF = 0b100;
   503  0787  080F               	movf	15,w	;volatile
   504  0788  398F               	andlw	-113
   505  0789  3840               	iorlw	64
   506  078A  008F               	movwf	15	;volatile
   507  078B                     l675:
   508                           
   509                           ;lab10_lab_pgr.c: 90:     OSCCONbits.SCS = 1;
   510  078B  140F               	bsf	15,0	;volatile
   511  078C                     l677:
   512                           
   513                           ;lab10_lab_pgr.c: 93:     TXSTAbits.SYNC = 0;
   514  078C  1218               	bcf	24,4	;volatile
   515  078D                     l679:
   516                           
   517                           ;lab10_lab_pgr.c: 94:     TXSTAbits.BRGH = 1;
   518  078D  1518               	bsf	24,2	;volatile
   519  078E                     l681:
   520                           
   521                           ;lab10_lab_pgr.c: 95:     BAUDCTLbits.BRG16 = 1;
   522  078E  1683               	bsf	3,5	;RP0=1, select bank3
   523  078F  1703               	bsf	3,6	;RP1=1, select bank3
   524  0790  1587               	bsf	7,3	;volatile
   525  0791                     l683:
   526                           
   527                           ;lab10_lab_pgr.c: 97:     SPBRG = 25;
   528  0791  3019               	movlw	25
   529  0792  1683               	bsf	3,5	;RP0=1, select bank1
   530  0793  1303               	bcf	3,6	;RP1=0, select bank1
   531  0794  0099               	movwf	25	;volatile
   532  0795                     l685:
   533                           
   534                           ;lab10_lab_pgr.c: 98:     SPBRGH = 0;
   535  0795  019A               	clrf	26	;volatile
   536  0796                     l687:
   537                           
   538                           ;lab10_lab_pgr.c: 100:     RCSTAbits.SPEN = 1;
   539  0796  1283               	bcf	3,5	;RP0=0, select bank0
   540  0797  1303               	bcf	3,6	;RP1=0, select bank0
   541  0798  1798               	bsf	24,7	;volatile
   542  0799                     l689:
   543                           
   544                           ;lab10_lab_pgr.c: 101:     TXSTAbits.TX9 = 0;
   545  0799  1683               	bsf	3,5	;RP0=1, select bank1
   546  079A  1303               	bcf	3,6	;RP1=0, select bank1
   547  079B  1318               	bcf	24,6	;volatile
   548  079C                     l691:
   549                           
   550                           ;lab10_lab_pgr.c: 102:     TXSTAbits.TXEN = 1;
   551  079C  1698               	bsf	24,5	;volatile
   552  079D                     l693:
   553                           
   554                           ;lab10_lab_pgr.c: 103:     RCSTAbits.CREN = 1;
   555  079D  1283               	bcf	3,5	;RP0=0, select bank0
   556  079E  1303               	bcf	3,6	;RP1=0, select bank0
   557  079F  1618               	bsf	24,4	;volatile
   558  07A0                     l69:
   559  07A0  0008               	return
   560  07A1                     __end_of_setup:
   561                           
   562                           	psect	text2
   563  07A1                     __ptext2:	
   564 ;; *************** function _imprimir *****************
   565 ;; Defined at:
   566 ;;		line 56 in file "lab10_lab_pgr.c"
   567 ;; Parameters:    Size  Location     Type
   568 ;;		None
   569 ;; Auto vars:     Size  Location     Type
   570 ;;		None
   571 ;; Return value:  Size  Location     Type
   572 ;;                  1    wreg      void 
   573 ;; Registers used:
   574 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1
   575 ;; Tracked objects:
   576 ;;		On entry : 0/0
   577 ;;		On exit  : 0/0
   578 ;;		Unchanged: 0/0
   579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   580 ;;      Params:         0       0       0       0       0
   581 ;;      Locals:         0       0       0       0       0
   582 ;;      Temps:          2       0       0       0       0
   583 ;;      Totals:         2       0       0       0       0
   584 ;;Total ram usage:        2 bytes
   585 ;; Hardware stack levels used: 1
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_main
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           
   593  07A1                     _imprimir:	
   594                           ;psect for function _imprimir
   595                           
   596  07A1                     l697:	
   597                           ;incstack = 0
   598                           ; Regs used in _imprimir: [wreg-fsr0h+status,2+status,0+btemp+1]
   599                           
   600                           
   601                           ;lab10_lab_pgr.c: 57:     while(i<=cont){
   602  07A1  2FD0               	goto	l709
   603  07A2                     l60:
   604                           
   605                           ;lab10_lab_pgr.c: 58:         if(PIR1bits.TXIF){
   606  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   607  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   608  07A4  1E0C               	btfss	12,4	;volatile
   609  07A5  2FA7               	goto	u11
   610  07A6  2FA8               	goto	u10
   611  07A7                     u11:
   612  07A7  2FD0               	goto	l709
   613  07A8                     u10:
   614  07A8                     l699:
   615                           
   616                           ;lab10_lab_pgr.c: 64:             for(i=0; i<=cont; i++){
   617  07A8  01F0               	clrf	_i
   618  07A9  01F1               	clrf	_i+1
   619  07AA  2FC2               	goto	l707
   620  07AB                     l701:
   621                           
   622                           ;lab10_lab_pgr.c: 65:                 _delay((unsigned long)((100)*(1000000/4000.0)));
   623  07AB  3021               	movlw	33
   624  07AC  00F7               	movwf	??_imprimir+1
   625  07AD  3076               	movlw	118
   626  07AE  00F6               	movwf	??_imprimir
   627  07AF                     u47:
   628  07AF  0BF6               	decfsz	??_imprimir,f
   629  07B0  2FAF               	goto	u47
   630  07B1  0BF7               	decfsz	??_imprimir+1,f
   631  07B2  2FAF               	goto	u47
   632  07B3  0000               	nop
   633  07B4                     l703:
   634                           
   635                           ;lab10_lab_pgr.c: 66:                 TXREG = mensaje[i];
   636  07B4  0870               	movf	_i,w
   637  07B5  3E20               	addlw	(low (_mensaje| 0))& (0+255)
   638  07B6  0084               	movwf	4
   639  07B7  1383               	bcf	3,7	;select IRP bank0
   640  07B8  0800               	movf	0,w
   641  07B9  1283               	bcf	3,5	;RP0=0, select bank0
   642  07BA  1303               	bcf	3,6	;RP1=0, select bank0
   643  07BB  0099               	movwf	25	;volatile
   644  07BC                     l705:
   645                           
   646                           ;lab10_lab_pgr.c: 67:             }
   647  07BC  3001               	movlw	1
   648  07BD  07F0               	addwf	_i,f
   649  07BE  1803               	skipnc
   650  07BF  0AF1               	incf	_i+1,f
   651  07C0  3000               	movlw	0
   652  07C1  07F1               	addwf	_i+1,f
   653  07C2                     l707:
   654  07C2  0871               	movf	_i+1,w
   655  07C3  3A80               	xorlw	128
   656  07C4  00FF               	movwf	btemp+1
   657  07C5  3080               	movlw	128
   658  07C6  027F               	subwf	btemp+1,w
   659  07C7  1D03               	skipz
   660  07C8  2FCB               	goto	u25
   661  07C9  301A               	movlw	26
   662  07CA  0270               	subwf	_i,w
   663  07CB                     u25:
   664  07CB  1C03               	skipc
   665  07CC  2FCE               	goto	u21
   666  07CD  2FCF               	goto	u20
   667  07CE                     u21:
   668  07CE  2FAB               	goto	l701
   669  07CF                     u20:
   670  07CF  2FA1               	goto	l697
   671  07D0                     l709:
   672                           
   673                           ;lab10_lab_pgr.c: 57:     while(i<=cont){
   674  07D0  0871               	movf	_i+1,w
   675  07D1  3A80               	xorlw	128
   676  07D2  00FF               	movwf	btemp+1
   677  07D3  3080               	movlw	128
   678  07D4  027F               	subwf	btemp+1,w
   679  07D5  1D03               	skipz
   680  07D6  2FD9               	goto	u35
   681  07D7  301A               	movlw	26
   682  07D8  0270               	subwf	_i,w
   683  07D9                     u35:
   684  07D9  1C03               	skipc
   685  07DA  2FDC               	goto	u31
   686  07DB  2FDD               	goto	u30
   687  07DC                     u31:
   688  07DC  2FA2               	goto	l60
   689  07DD                     u30:
   690  07DD                     l66:
   691  07DD  0008               	return
   692  07DE                     __end_of_imprimir:
   693  007E                     btemp	set	126	;btemp
   694  007E                     wtemp0	set	126
   695                           
   696                           	psect	idloc
   697                           
   698                           ;Config register IDLOC0 @ 0x2000
   699                           ;	unspecified, using default values
   700  2000                     	org	8192
   701  2000  3FFF               	dw	16383
   702                           
   703                           ;Config register IDLOC1 @ 0x2001
   704                           ;	unspecified, using default values
   705  2001                     	org	8193
   706  2001  3FFF               	dw	16383
   707                           
   708                           ;Config register IDLOC2 @ 0x2002
   709                           ;	unspecified, using default values
   710  2002                     	org	8194
   711  2002  3FFF               	dw	16383
   712                           
   713                           ;Config register IDLOC3 @ 0x2003
   714                           ;	unspecified, using default values
   715  2003                     	org	8195
   716  2003  3FFF               	dw	16383
   717                           
   718                           	psect	config
   719                           
   720                           ;Config register CONFIG1 @ 0x2007
   721                           ;	Oscillator Selection bits
   722                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
   723                           ;	Watchdog Timer Enable bit
   724                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
   725                           ;	Power-up Timer Enable bit
   726                           ;	PWRTE = OFF, PWRT disabled
   727                           ;	RE3/MCLR pin function select bit
   728                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
   729                           ;	Code Protection bit
   730                           ;	CP = OFF, Program memory code protection is disabled
   731                           ;	Data Code Protection bit
   732                           ;	CPD = OFF, Data memory code protection is disabled
   733                           ;	Brown Out Reset Selection bits
   734                           ;	BOREN = OFF, BOR disabled
   735                           ;	Internal External Switchover bit
   736                           ;	IESO = OFF, Internal/External Switchover mode is disabled
   737                           ;	Fail-Safe Clock Monitor Enabled bit
   738                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
   739                           ;	Low Voltage Programming Enable bit
   740                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
   741                           ;	In-Circuit Debugger Mode bit
   742                           ;	DEBUG = 0x1, unprogrammed default
   743  2007                     	org	8199
   744  2007  20D4               	dw	8404
   745                           
   746                           ;Config register CONFIG2 @ 0x2008
   747                           ;	Brown-out Reset Selection bit
   748                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
   749                           ;	Flash Program Memory Self Write Enable bits
   750                           ;	WRT = OFF, Write protection off
   751  2008                     	org	8200
   752  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        27
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       8
    BANK0            80      0      25
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_imprimir

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                           _imprimir
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _imprimir                                             2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _imprimir
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      19       5       31.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      2       8       1       57.1%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sat May 07 00:42:53 2022

                      _i 0070                        pc 0002                       l60 07A2  
                     l66 07DD                       l69 07A0                       u10 07A8  
                     u11 07A7                       u20 07CF                       u21 07CE  
                     u30 07DD                       u31 07DC                       u25 07CB  
                     u35 07D9                       u47 07AF                       fsr 0004  
                    l701 07AB                      l703 07B4                      l711 073A  
                    l705 07BC                      l713 073F                      l707 07C2  
                    l709 07D0                      l661 0774                      l671 0784  
                    l663 0778                      l681 078E                      l673 0787  
                    l665 0779                      l691 079C                      l683 0791  
                    l675 078B                      l667 0782                      l693 079D  
                    l685 0795                      l677 078C                      l669 0783  
                    l687 0796                      l679 078D                      l697 07A1  
                    l689 0799                      l699 07A8                      fsr0 0004  
                    indf 0000                     _cont 0074                     _main 073A  
                   btemp 007E                     start 0000                    ?_main 0076  
                  _ANSEL 0188                    _SPBRG 0099                    _PORTA 0005  
                  _PORTD 0008                    _TRISA 0085                    _TRISD 0088  
                  _TXREG 0019                    _setup 0774                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07DE  
           __end_of_main 0748                   ??_main 0078                   ?_setup 0076  
                 _ANSELH 0189                   _SPBRGH 009A                   _indice 0073  
       __end_of_imprimir 07DE             __pdataCOMMON 0074  __end_of__initialization 07FC  
         __pcstackCOMMON 0076             __pidataBANK0 075B            __end_of_setup 07A1  
                ??_setup 0076               __pmaintext 073A                ?_imprimir 0076  
                __ptext1 0774                  __ptext2 07A1                  _mensaje 0020  
   end_of_initialization 07FC               ??_imprimir 0076                _RCSTAbits 0018  
              _TXSTAbits 0098            __pidataCOMMON 0738              _BAUDCTLbits 0187  
    start_initialization 07DE               init_fetch0 0748              __pdataBANK0 0020  
            __pbssCOMMON 0070                ___latbits 0002                 _PIE1bits 008C  
               _PIR1bits 000C                _valor_old 0072                 _imprimir 07A1  
             _INTCONbits 000B                 init_ram0 074C               _OSCCONbits 008F  
